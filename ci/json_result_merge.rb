require 'json'

# merge json result generated by rerun to the first result
def merge (from, to, out)
  srcFile = open(from)
  destFile = open(to)
  srcJson = JSON.parse(srcFile.read)
  destJson = JSON.parse(destFile.read)
  outFile = File.new(out, 'w')


  srcJson.each do |feature|
    destJson.each do |destFeature|
      if feature['uri'].eql? destFeature['uri']
        feature['elements'].each do |scenario|
          counter = 0
          destFeature['elements'].each do |destScenario|
            if scenario['line'] == destScenario['line']

              # copy rerun result to result_merge only if rerun pass
              rerun_pass = true
              if scenario.has_key?('steps')
                scenario['steps'].each do |step|
                  if step['result']['status'] == 'failed'
                    rerun_pass = false
                    break
                  end
                end
              end

              destFeature['elements'][counter] = scenario if rerun_pass

            end
            counter += 1
          end
        end
      end
    end
  end

  outFile.puts JSON.dump destJson


  srcFile.close
  destFile.close
  outFile.close
end